@model IEnumerable<Actor>

@{
    ViewData["Title"] = "Actors List";
}

<style>
    .actor-card {
        width: 190px;
        height: 270px;
        background: #3405a3;
        border-radius: 15px;
        box-shadow: 1px 5px 60px 0px #100a886b;
        transition: transform 0.3s ease;
    }

        .actor-card:hover {
            transform: translateY(-5px);
        }

        .actor-card .card-border-top {
            width: 60%;
            height: 3%;
            background: #6b64f3;
            margin: auto;
            border-radius: 0px 0px 15px 15px;
        }

        .actor-card .img {
            width: 70px;
            height: 80px;
            background: #6b64f3;
            border-radius: 15px;
            margin: auto;
            margin-top: 25px;
            overflow: hidden;
        }

            .actor-card .img img {
                width: 100%;
                height: 100%;
                object-fit: cover;
                border-radius: 15px;
            }

        .actor-card span {
            font-weight: 600;
            color: white;
            text-align: center;
            display: block;
            padding-top: 10px;
            font-size: 16px;
        }

        .actor-card .job {
            font-weight: 400;
            color: #ddd;
            display: block;
            text-align: center;
            padding-top: 3px;
            font-size: 12px;
        }

        .actor-card .btn-group {
            display: flex;
            justify-content: center;
            gap: 5px;
            margin-top: 15px;
        }

        .actor-card a, .actor-card form button {
            padding: 6px 12px;
            font-size: 12px;
            border-radius: 6px;
            border: none;
            color: white;
            font-weight: 600;
            cursor: pointer;
        }

        .actor-card .edit-btn {
            background: #00b894;
        }

            .actor-card .edit-btn:hover {
                background: #019874;
            }

        .actor-card .delete-btn {
            background: #d63031;
        }

            .actor-card .delete-btn:hover {
                background: #b02425;
            }
</style>

<div data-aos="fade-up" class="container my-5">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2 class="fw-bold text-primary">🎭 Actors List</h2>
        <a asp-action="Create" class="btn btn-primary">+ Add New Actor</a>
    </div>

    @if (Model != null && Model.Any())
    {
        <div data-aos="fade-up" class="d-flex flex-wrap justify-content-center gap-4">
            @foreach (var actor in Model)
            {
                <div class="actor-card text-center">
                    <div class="card-border-top"></div>
                    <div class="img">
                        <img src="~/images/Actors/@actor.Image" alt="@actor.Name" />
                    </div>
                    <span>@actor.Name</span>
                    <p class="job">Actor</p>

                    <div class="btn-group">
                        <a asp-action="Edit" asp-route-id="@actor.Id" class="edit-btn">Edit</a>

                        <form class="delete-btn" asp-action="Delete" asp-route-id="@actor.Id" method="post" style="display:inline;">
                            <button type="submit" class="delete-btn">Delete</button>
                        </form>
                    </div>
                </div>
            }
        </div>
    }
    else
    {
        <p data-aos="fade-up" data-aos-offset="30" class="text-muted text-center">No actors found.</p>
    }
</div>
<script>
    document.querySelectorAll(".delete-btn").forEach(form => {
        form.addEventListener("submit", function (e) {
            e.preventDefault();

            Swal.fire({
                title: "Are you sure you want to Delete this Cinema ?",
                text: "The Cinema will be Delete now",
                icon: "question",
                showCancelButton: true,
                confirmButtonText: "Yes Delete it",
                cancelButtonText: "Cancel"
            }).then((result) => {
                if (result.isConfirmed) {
                    Swal.fire({
                        title: "Deleted successfully",
                        text: "The Cinema has been Deleted",
                        icon: "success",
                        timer: 2000,
                        showConfirmButton: false,
                        willClose: () => {
                            form.submit(); // Submit the correct form
                        }
                    });
                } else {
                    Swal.fire({
                        title: "Cancelled",
                        text: "The Cinema was not Deleted",
                        icon: "info",
                        timer: 2000,
                        showConfirmButton: false
                    });
                }
            });
        });
    });
</script>